"""new migration

Revision ID: 98a4d728f108
Revises: 
Create Date: 2024-08-07 18:25:05.007412

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '98a4d728f108'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=False),
    sa.Column('user_role', sa.Enum('Business', 'Agent', 'Admin', name='user_roles'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('profile_picture', sa.String(), nullable=True),
    sa.Column('status', sa.Enum('Available', 'Unavailable', name='user_statuses'), nullable=True),
    sa.Column('Request', sa.Enum('Approved', 'Pending', 'Rejected', name='approval_statuses'), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone_number')
    )
    op.create_table('notifications',
    sa.Column('notification_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('type', sa.Enum('SMS', 'Email', 'App', name='notification_types'), nullable=False),
    sa.Column('status', sa.Enum('Sent', 'Delivered', 'Read', name='notification_statuses'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('notification_id')
    )
    op.create_table('parcels',
    sa.Column('parcel_id', sa.Integer(), nullable=False),
    sa.Column('sender_id', sa.Integer(), nullable=False),
    sa.Column('tracking_number', sa.String(length=20), nullable=False),
    sa.Column('recipient_name', sa.String(), nullable=False),
    sa.Column('recipient_address', sa.String(), nullable=False),
    sa.Column('recipient_phone', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('weight', sa.DECIMAL(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('current_location', sa.String(length=255), nullable=False),
    sa.Column('status', sa.Enum('Scheduled for Pickup', 'Picked Up', 'Out for Delivery', 'In Transit', 'Delivered', 'Cancelled', name='parcel_statuses'), nullable=False),
    sa.Column('sender_email', sa.String(), nullable=False),
    sa.Column('recipient_email', sa.String(), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['sender_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('parcel_id'),
    sa.UniqueConstraint('tracking_number')
    )
    op.create_table('deliveries',
    sa.Column('delivery_id', sa.Integer(), nullable=False),
    sa.Column('parcel_id', sa.Integer(), nullable=False),
    sa.Column('agent_id', sa.Integer(), nullable=True),
    sa.Column('pickup_time', sa.TIMESTAMP(), nullable=False),
    sa.Column('delivery_time', sa.TIMESTAMP(), nullable=True),
    sa.Column('status', sa.Enum('Scheduled', 'In Transit', 'Delivered', name='delivery_statuses'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['agent_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['parcel_id'], ['parcels.parcel_id'], ),
    sa.PrimaryKeyConstraint('delivery_id')
    )
    op.create_table('orders',
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('order_number', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('parcel_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('status', sa.Enum('Active', 'Cancelled', name='order_statuses'), nullable=False),
    sa.ForeignKeyConstraint(['parcel_id'], ['parcels.parcel_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('order_id')
    )
    op.create_table('tracking',
    sa.Column('tracking_id', sa.Integer(), nullable=False),
    sa.Column('parcel_id', sa.Integer(), nullable=False),
    sa.Column('location', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('timestamp', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['parcel_id'], ['parcels.parcel_id'], ),
    sa.PrimaryKeyConstraint('tracking_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tracking')
    op.drop_table('orders')
    op.drop_table('deliveries')
    op.drop_table('parcels')
    op.drop_table('notifications')
    op.drop_table('users')
    # ### end Alembic commands ###
