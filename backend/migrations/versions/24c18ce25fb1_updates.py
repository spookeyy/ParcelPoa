"""updates

Revision ID: 24c18ce25fb1
Revises: 2be7f5dff64f
Create Date: 2024-07-30 11:56:18.502081

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '24c18ce25fb1'
down_revision = '2be7f5dff64f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('delivery')
    op.drop_table('parcel')
    op.drop_table('user')
    op.drop_table('order')
    op.drop_table('product')
    op.drop_table('notification')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('notification',
    sa.Column('notification_id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('message', sa.VARCHAR(), nullable=False),
    sa.Column('type', sa.VARCHAR(length=5), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('notification_id')
    )
    op.create_table('product',
    sa.Column('product_id', sa.INTEGER(), nullable=False),
    sa.Column('order_id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('price', sa.DECIMAL(), nullable=False),
    sa.Column('quantity', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['order.order_id'], ),
    sa.PrimaryKeyConstraint('product_id')
    )
    op.create_table('order',
    sa.Column('order_id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('parcel_id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['parcel_id'], ['parcel.parcel_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('order_id')
    )
    op.create_table('user',
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('email', sa.VARCHAR(), nullable=False),
    sa.Column('phone_number', sa.VARCHAR(), nullable=False),
    sa.Column('user_role', sa.VARCHAR(length=8), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone_number')
    )
    op.create_table('parcel',
    sa.Column('parcel_id', sa.INTEGER(), nullable=False),
    sa.Column('sender_id', sa.INTEGER(), nullable=False),
    sa.Column('recipient_id', sa.INTEGER(), nullable=False),
    sa.Column('recipient_address', sa.VARCHAR(), nullable=False),
    sa.Column('recipient_phone_number', sa.VARCHAR(), nullable=False),
    sa.Column('description', sa.VARCHAR(), nullable=False),
    sa.Column('weight', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['recipient_id'], ['user.user_id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('parcel_id')
    )
    op.create_table('delivery',
    sa.Column('delivery_id', sa.INTEGER(), nullable=False),
    sa.Column('parcel_id', sa.INTEGER(), nullable=False),
    sa.Column('agent_id', sa.INTEGER(), nullable=False),
    sa.Column('pickup_time', sa.TIMESTAMP(), nullable=False),
    sa.Column('delivery_time', sa.TIMESTAMP(), nullable=True),
    sa.Column('status', sa.VARCHAR(length=10), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['agent_id'], ['user.user_id'], ),
    sa.ForeignKeyConstraint(['parcel_id'], ['parcel.parcel_id'], ),
    sa.PrimaryKeyConstraint('delivery_id')
    )
    # ### end Alembic commands ###
